// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package mock

import (
	"context"
	"github.com/ONSdigital/dis-migration-service/clients"
	"github.com/ONSdigital/dp-api-clients-go/v2/files"
	"sync"
)

// Ensure, that FilesAPIClientMock does implement clients.FilesAPIClient.
// If this is not the case, regenerate this file with moq.
var _ clients.FilesAPIClient = &FilesAPIClientMock{}

// FilesAPIClientMock is a mock implementation of clients.FilesAPIClient.
//
//	func TestSomethingThatUsesFilesAPIClient(t *testing.T) {
//
//		// make and configure a mocked clients.FilesAPIClient
//		mockedFilesAPIClient := &FilesAPIClientMock{
//			GetFileFunc: func(ctx context.Context, path string, authToken string) (files.FileMetaData, error) {
//				panic("mock out the GetFile method")
//			},
//		}
//
//		// use mockedFilesAPIClient in code that requires clients.FilesAPIClient
//		// and then make assertions.
//
//	}
type FilesAPIClientMock struct {
	// GetFileFunc mocks the GetFile method.
	GetFileFunc func(ctx context.Context, path string, authToken string) (files.FileMetaData, error)

	// calls tracks calls to the methods.
	calls struct {
		// GetFile holds details about calls to the GetFile method.
		GetFile []struct {
			// Ctx is the ctx argument value.
			Ctx context.Context
			// Path is the path argument value.
			Path string
			// AuthToken is the authToken argument value.
			AuthToken string
		}
	}
	lockGetFile sync.RWMutex
}

// GetFile calls GetFileFunc.
func (mock *FilesAPIClientMock) GetFile(ctx context.Context, path string, authToken string) (files.FileMetaData, error) {
	if mock.GetFileFunc == nil {
		panic("FilesAPIClientMock.GetFileFunc: method is nil but FilesAPIClient.GetFile was just called")
	}
	callInfo := struct {
		Ctx       context.Context
		Path      string
		AuthToken string
	}{
		Ctx:       ctx,
		Path:      path,
		AuthToken: authToken,
	}
	mock.lockGetFile.Lock()
	mock.calls.GetFile = append(mock.calls.GetFile, callInfo)
	mock.lockGetFile.Unlock()
	return mock.GetFileFunc(ctx, path, authToken)
}

// GetFileCalls gets all the calls that were made to GetFile.
// Check the length with:
//
//	len(mockedFilesAPIClient.GetFileCalls())
func (mock *FilesAPIClientMock) GetFileCalls() []struct {
	Ctx       context.Context
	Path      string
	AuthToken string
} {
	var calls []struct {
		Ctx       context.Context
		Path      string
		AuthToken string
	}
	mock.lockGetFile.RLock()
	calls = mock.calls.GetFile
	mock.lockGetFile.RUnlock()
	return calls
}
